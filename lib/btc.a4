#
#	btc.a4	- words for parsing BTC transactions
#


samplebtc : -> IStream;
	"samples/data/rawbtctrans.hex" open.

# Leaves : Int(Version)
btchead : IStream -> Int IStream; # Should only be one Int normally but we're hacking stuff.
	4 bytes 		# Grab 4 bytes from the istream.
	read little		# read them as a little endian hexstream.
	int 			# convert to an integer.
	# Confirm this is Version 1.
	dup 1 int == "Only Version 1 Supported!" assert 
	swap
	.


# Just handy for going straight from btchead to xtinput.
skip_to_first_input : Int IStream -> Int Int IStream;
	1 bytes read int swap
	.

reset : -> IStream;
	samplebtc
	btchead
	skip_to_first_input
	.

txhash : IStream -> Bytes IStream;
	# Bytes(Prior TX Hash), IStream
	32 bytes read little swap.

txindex : IStream -> Int IStream;
	# Bytes(Prior TX Hash) + Int(Output Tx Index), IStream
	4 bytes read little int swap.

unlock_script : IStream -> Bytes IStream;
	# Size of rest of input. + Int(byte count for next read)
	1 bytes read int 	

	# Bytes(Prior TX Hash), Int(Output Tx Index), Bytes(Unlock Script), IStream
	bytes
	read 

	swap.


insequence : IStream -> Bytes IStream;
	4 bytes read little swap.



# Leaves: Bytes(Prior TX Hash) Int(Output Tx Index) Bytes(Unlock Script) Bytes(Seq#) IStream
xtinput : IStream -> Bytes Int Bytes Bytes IStream;
	txhash
	txindex
	unlock_script		
	# Bytes(Prior TX Hash), Int(Output Tx Index), Bytes(Unlock Script), Bytes(Seq #), IStream
	insequence
	.


